name: tests
run-name: tests, branch:${{ github.ref_name }}, triggered by @${{ github.actor }}

concurrency:
  # Run only for most recent commit in PRs but for all tags and commits on main
  # Ref: https://docs.github.com/en/actions/using-jobs/using-concurrency
  group: ${{ github.workflow }}-${{ github.head_ref || github.sha }}
  cancel-in-progress: true

on:
  merge_group:
    branches:
      - 'main'
  pull_request:
    branches:
      - '**'
      - 'release/*'
  push:
    branches:
      - 'main'
      - 'release/*'
    tags:
      - '*'
  workflow_dispatch: {}

env:
  MISE_VERBOSE: 1

permissions:
  contents: read

jobs:
  check-docs-only:
    runs-on: ubuntu-latest
    outputs:
      docs_only: ${{ steps.check-files.outputs.docs_only }}
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          egress-policy: audit
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0
      - id: check-files
        name: Check if only documentation files changed
        run: ./scripts/check-docs-only-changes.sh ${{ github.event.pull_request.base.sha || 'HEAD~1' }} ${{ github.sha }}

  ensure-actions-sha-pin:
    runs-on: ubuntu-latest
    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
      with:
        egress-policy: audit
    - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
    - uses: zgosalvez/github-actions-ensure-sha-pinned-actions@9e9574ef04ea69da568d6249bd69539ccc704e74 # v4.0.0

  ossf-scorecard:
    runs-on: ubuntu-latest
    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
      with:
        egress-policy: audit
    - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
    # Ref: https://github.com/ossf/scorecard
    - run: |
        GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }} \
          REPO=github.com/${{ github.repository }} \
          COMMIT=${{ github.sha }} \
          make docker.run.openssf

  lint:
    runs-on: ubuntu-latest
    needs: [check-docs-only]
    if: ${{ needs.check-docs-only.outputs.docs_only != 'true' }}
    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
      with:
        egress-policy: audit
    - name: Checkout repository
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

    - name: Setup go
      uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
      with:
        go-version-file: go.mod

    - uses: jdx/mise-action@e3d7b8d67a7958d1207f6ed871e83b1ea780e7b0 # v3.3.1
      with:
        install: false

    - name: run lint
      env:
        # Our .golangci.yaml has fix: true, but we don't want that in CI therefore the below override.
        GOLANGCI_LINT_FLAGS: "--fix=false"
        # Add GITHUB_TOKEN env so that mise plugins can can access GitHub's API
        # authenticated and thus not get rate-limited (which causes failures).
        # Source ref: https://github.com/hypnoglow/asdf-golangci-lint/blob/f02f2ee73bd6d1bc4d69d6aad583cf05879fc9ea/bin/list-all#L10C12-L12
        GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: make lint

    - name: run lint.api
      run: make lint.api

    - name: run lint.actions
      run: make lint.actions

  lint-markdownlint:
    runs-on: ubuntu-latest
    needs: [check-docs-only]
    if: ${{ needs.check-docs-only.outputs.docs_only != 'true' }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

    - name: Setup go
      uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
      with:
        go-version-file: go.mod

    - uses: jdx/mise-action@e3d7b8d67a7958d1207f6ed871e83b1ea780e7b0 # v3.3.1
      with:
        install: false

    - name: run lint.markdownlint
      run: make lint.markdownlint

  govulncheck:
    runs-on: ubuntu-latest
    needs: [check-docs-only]
    if: ${{ needs.check-docs-only.outputs.docs_only != 'true' }}
    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
      with:
        egress-policy: audit
    - name: Checkout repository
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
    - name: Setup go
      uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
      with:
        go-version-file: go.mod
    - uses: jdx/mise-action@e3d7b8d67a7958d1207f6ed871e83b1ea780e7b0 # v3.3.1
      with:
        install: false
    - run: make govulncheck

  verify:
    runs-on: ubuntu-latest
    needs: [check-docs-only]
    if: ${{ needs.check-docs-only.outputs.docs_only != 'true' }}
    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
      with:
        egress-policy: audit
    - name: Checkout repository
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

    - name: Setup go
      uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
      with:
        go-version-file: go.mod

    - uses: jdx/mise-action@e3d7b8d67a7958d1207f6ed871e83b1ea780e7b0 # v3.3.1
      with:
        install: false

    - name: Verify manifests consistency
      run: make verify.manifests

    - name: Verify generators consistency
      uses: nick-fields/retry@ce71cc2ab81d554ebbe88c79ab5975992d79ba08 # v3.0.2
      # Add GITHUB_TOKEN env so that scripts/generate-crd-kustomize.sh can
      # access GitHub's API authenticated and thus not get rate-limited (which
      # causes failures).
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        timeout_minutes: 3
        max_attempts: 6
        retry_wait_seconds: 20
        command: make verify.generators

  samples:
    runs-on: ubuntu-latest
    needs: [check-docs-only]
    if: ${{ needs.check-docs-only.outputs.docs_only != 'true' }}
    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
      with:
        egress-policy: audit
    - name: Checkout repository
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

    - name: Setup go
      uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
      with:
        go-version-file: go.mod

    - name: pick kind version from .github/supported_k8s_node_versions.yaml
      id: kind-version
      run: |
        (
          echo 'version<<EOF'
          yq eval -r -o=json '.[0]' .github/supported_k8s_node_versions.yaml
          echo 'EOF'
        ) >> "${GITHUB_OUTPUT}"

    - name: Create k8s KinD Cluster
      uses: helm/kind-action@a1b0e391336a6ee6713a0583f8c6240d70863de3 # v1.12.0
      with:
        # NOTE: default is 0.29.0 https://github.com/helm/kind-action/blob/a1b0e391336a6ee6713a0583f8c6240d70863de3/kind.sh#L21
        # so bump this manually
        version: v0.30.0
        node_image: kindest/node:${{ steps.kind-version.outputs.version }}

    - uses: jdx/mise-action@e3d7b8d67a7958d1207f6ed871e83b1ea780e7b0 # v3.3.1
      with:
        install: false

    # We use install.all to install all CRDs and resources also the ones that are not bundled
    # in base kustomization (e.g. currently AIGateway) but which have samples defined.
    - name: Verify installing CRDs via kustomize works
      run: make install.all

    - name: Install and delete each sample one by one
      run: make test.samples

    - name: Verify that uninstalling operator CRDs via kustomize works
      run: make ignore-not-found=true uninstall.all

  install-with-kustomize:
    runs-on: ubuntu-latest
    needs: [check-docs-only]
    if: ${{ needs.check-docs-only.outputs.docs_only != 'true' }}
    env:
      IMG: kong-operator
      TAG: e2e-${{ github.sha }}
      CLUSTER_NAME: install-with-kustomize
    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
      with:
        egress-policy: audit
    - name: Checkout repository
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

    - name: Setup go
      uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
      with:
        go-version-file: go.mod

    - name: build docker image
      run: make docker.build

    - name: pick kind version from .github/supported_k8s_node_versions.yaml
      id: kind-version
      run: |
        (
          echo 'version<<EOF'
          yq eval -r -o=json '.[0]' .github/supported_k8s_node_versions.yaml
          echo 'EOF'
        ) >> "${GITHUB_OUTPUT}"

    - name: Create k8s KinD Cluster
      uses: helm/kind-action@a1b0e391336a6ee6713a0583f8c6240d70863de3 # v1.12.0
      with:
        cluster_name: ${{ env.CLUSTER_NAME }}
        # NOTE: default is 0.29.0 https://github.com/helm/kind-action/blob/a1b0e391336a6ee6713a0583f8c6240d70863de3/kind.sh#L21
        # so bump this manually
        version: v0.30.0
        node_image: kindest/node:${{ steps.kind-version.outputs.version }}

    - uses: jdx/mise-action@e3d7b8d67a7958d1207f6ed871e83b1ea780e7b0 # v3.3.1
      with:
        install: false

    - name: Verify installing CRDs via kustomize works
      run: make install

    - name: Load image to kind cluster
      run: kind load docker-image kong-operator:e2e-${{ github.sha }} --name $CLUSTER_NAME

    - name: Verify deploying operator via kustomize works
      env:
        IMG: kong-operator
        VERSION: e2e-${{ github.sha }}
      run: make deploy

    - name: Verify that undeploying operator via kustomize works
      run: make undeploy

    - name: Verify that uninstalling operator CRDs via kustomize works
      run: make ignore-not-found=true uninstall

  build:
    runs-on: ubuntu-latest
    needs: [check-docs-only]
    if: ${{ needs.check-docs-only.outputs.docs_only != 'true' }}
    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
      with:
        egress-policy: audit
    - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

    - name: setup golang
      uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
      with:
        go-version-file: go.mod

    - run: make build.operator

    - name: Test the binary by running it with -version flag
      run: ./bin/manager -version | ./scripts/verify-version.sh ${{ github.repository }}

  unit-tests:
    runs-on: ubuntu-latest
    needs: [check-docs-only]
    if: ${{ needs.check-docs-only.outputs.docs_only != 'true' }}
    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
      with:
        egress-policy: audit
    - name: checkout repository
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

    - name: setup golang
      uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
      with:
        go-version-file: go.mod

    - uses: jdx/mise-action@e3d7b8d67a7958d1207f6ed871e83b1ea780e7b0 # v3.3.1
      with:
        install: false

    - name: run unit tests
      run: make test.unit
      env:
        KONG_PLUGIN_IMAGE_REGISTRY_CREDENTIALS: ${{ secrets.KONG_PLUGIN_IMAGE_REGISTRY_CREDENTIALS }}
        GOTESTSUM_JUNITFILE: "unit-tests.xml"

    - name: collect test coverage
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      with:
        name: coverage-unit-tests
        path: coverage.unit.out

    - name: collect test report
      if: ${{ always() }}
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      with:
        name: tests-report-unit-tests
        path: unit-tests.xml

  CRDs:
    runs-on: ubuntu-latest
    needs: [check-docs-only]
    if: ${{ needs.check-docs-only.outputs.docs_only != 'true' }}
    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
      with:
        egress-policy: audit
    - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

    - uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
      with:
        go-version-file: go.mod

    - uses: jdx/mise-action@e3d7b8d67a7958d1207f6ed871e83b1ea780e7b0 # v3.3.1
      with:
        install: false

    - name: Run the crds validation tests
      run: make test.crds-validation
    
    # TODO: https://github.com/Kong/kong-operator/issues/2386
    - name: Create k8s KinD Cluster
      uses: helm/kind-action@a1b0e391336a6ee6713a0583f8c6240d70863de3 # v1.12.0
      with:
        # NOTE: default is 0.26.0 https://github.com/helm/kind-action/blob/a1b0e391336a6ee6713a0583f8c6240d70863de3/kind.sh#L21
        # so bump this manually
        version: v0.27.0

    - name: Verify installing CRDs via kustomize works
      run: make install.only

    - name: Run the rest of CRDs tests
      run: make test.crds

  envtest-tests:
    runs-on: ubuntu-latest
    needs: [check-docs-only]
    if: ${{ needs.check-docs-only.outputs.docs_only != 'true' }}
    strategy:
      matrix:
        directory:
          - ingress-controller
          - .
    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
      with:
        egress-policy: audit
    - name: checkout repository
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

    - name: setup golang
      uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
      with:
        go-version-file: go.mod

    - uses: jdx/mise-action@e3d7b8d67a7958d1207f6ed871e83b1ea780e7b0 # v3.3.1
      with:
        install: false

    - uses: Kong/kong-license@c4decf08584f84ff8fe8e7cd3c463e0192f6111b # master @ 20250107
      id: license
      with:
        op-token: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}
        

    - name: run envtest tests
      working-directory: ${{ matrix.directory }}
      run: make test.envtest
      env:
        KONG_LICENSE_DATA: ${{ steps.license.outputs.license }}
        GOTESTSUM_JUNITFILE: "${{ matrix.directory }}/envtest-tests.xml"

    - name: collect test coverage
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      with:
        name: ${{ matrix.directory == '.' && 'ko' || matrix.directory }}-coverage-envtest-tests
        path: ${{ matrix.directory }}/coverage.envtest.out

    - name: collect test report
      if: ${{ always() }}
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      with:
        name: ${{ matrix.directory == '.' && 'ko' || matrix.directory }}-tests-report-envtest-tests
        path: ${{ matrix.directory }}/envtest-tests.xml
  
  kongintegration-tests:
    needs: [check-docs-only]
    if: ${{ needs.check-docs-only.outputs.docs_only != 'true' }}
    uses: ./.github/workflows/_kongintegration_tests.yaml
    secrets: inherit

  conformance-tests:
    runs-on: ubuntu-latest
    needs: [check-docs-only]
    if: ${{ needs.check-docs-only.outputs.docs_only != 'true' }}
    strategy:
      fail-fast: false
      matrix:
        include:
        - router-flavor: traditional_compatible
        - router-flavor: expressions
    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
      with:
        egress-policy: audit
    - name: checkout repository
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      with:
        # Fetch all history so that we can get the correct commit hash for the conformance tests.
        fetch-depth: 0

    - name: setup golang
      uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
      with:
        go-version-file: go.mod

    - uses: jdx/mise-action@e3d7b8d67a7958d1207f6ed871e83b1ea780e7b0 # v3.3.1
      with:
        install: false

    - name: run conformance tests
      run: make test.conformance
      env:
        GOTESTSUM_JUNITFILE: conformance-tests-${{ matrix.router-flavor }}.xml
        TEST_KONG_ROUTER_FLAVOR: ${{ matrix.router-flavor }}
        # Add GITHUB_TOKEN env so that mise plugins can can access GitHub's API
        # authenticated and thus not get rate-limited (which causes failures).
        # Source ref: https://github.com/pirackr/asdf-telepresence/blob/c9eeab4d28b9851bb904c4c67239a118c8dd384d/bin/list-all#L7-L9
        GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: upload diagnostics
      if: ${{ always() }}
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      with:
        name: diagnostics-conformance-${{ matrix.router-flavor }}
        path: /tmp/ktf-diag*
        if-no-files-found: ignore

    - name: collect test report
      if: ${{ always() }}
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      with:
        name: tests-report-conformance-${{ matrix.router-flavor }}
        path: conformance-tests-${{ matrix.router-flavor }}.xml

    - name: collect conformance report
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      with:
        name: conformance-report-${{ matrix.router-flavor }}
        path: experimental-*-report.yaml

  integration-tests:
    runs-on: ubuntu-latest
    name: integration-tests
    needs: [check-docs-only]
    if: ${{ needs.check-docs-only.outputs.docs_only != 'true' }}
    strategy:
      matrix:
        directory:
          - ingress-controller
          - .
    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
      with:
        egress-policy: audit
    - name: checkout repository
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

    - name: setup golang
      uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
      with:
        go-version-file: go.mod

    - uses: jdx/mise-action@e3d7b8d67a7958d1207f6ed871e83b1ea780e7b0 # v3.3.1
      with:
        install: false

    - name: run integration tests
      working-directory: ${{ matrix.directory }}
      run: make test.integration
      env:
        KONG_PLUGIN_IMAGE_REGISTRY_CREDENTIALS: ${{ secrets.KONG_PLUGIN_IMAGE_REGISTRY_CREDENTIALS }}
        KONG_CONTROLLER_OUT: stdout
        GOTESTSUM_JUNITFILE: "${{ matrix.directory }}/integration-tests.xml"
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        # Add GITHUB_TOKEN env so that mise plugins can can access GitHub's API
        # authenticated and thus not get rate-limited (which causes failures).
        # Source ref: https://github.com/pirackr/asdf-telepresence/blob/c9eeab4d28b9851bb904c4c67239a118c8dd384d/bin/list-all#L7-L9
        GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        KONG_TEST_KONNECT_ACCESS_TOKEN: ${{ secrets.KONG_TEST_KONNECT_ACCESS_TOKEN }}
        KONG_TEST_KONNECT_SERVER_URL: us.api.konghq.tech

    - name: upload diagnostics
      if: always()
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      with:
        name: diagnostics-integration
        path: /tmp/ktf-diag*
        if-no-files-found: ignore

    - name: collect test coverage
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      with:
        name: ${{ matrix.directory == '.' && 'ko' || matrix.directory }}-coverage-integration
        path: ${{ matrix.directory }}/coverage.integration.out

    - name: collect test report
      if: ${{ always() }}
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      with:
        name: ${{ matrix.directory == '.' && 'ko' || matrix.directory }}-tests-report-integration
        path: ${{ matrix.directory }}/integration-tests.xml

  integration-tests-bluegreen:
    runs-on: ubuntu-latest
    name: integration-tests-bluegreen
    needs: [check-docs-only]
    if: ${{ needs.check-docs-only.outputs.docs_only != 'true' }}
    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
      with:
        egress-policy: audit
    - name: checkout repository
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

    - name: setup golang
      uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
      with:
        go-version-file: go.mod

    - uses: jdx/mise-action@e3d7b8d67a7958d1207f6ed871e83b1ea780e7b0 # v3.3.1
      with:
        install: false

    - name: run integration tests
      run: make test.integration_bluegreen
      env:
        KONG_CONTROLLER_OUT: stdout
        GOTESTSUM_JUNITFILE: integration-tests-bluegreen.xml
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        KONG_TEST_KONNECT_ACCESS_TOKEN: ${{ secrets.KONG_TEST_KONNECT_ACCESS_TOKEN }}
        KONG_TEST_KONNECT_SERVER_URL: us.api.konghq.tech

    - name: upload diagnostics
      if: always()
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      with:
        name: diagnostics-integration-bluegreen
        path: /tmp/ktf-diag*
        if-no-files-found: ignore

    - name: collect test coverage
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      with:
        name: coverage-integration-bluegreen
        path: coverage.integration-bluegreen.out

    - name: collect test report
      if: always()
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      with:
        name: tests-report-integration-bluegreen
        path: integration-tests-bluegreen.xml

  e2e-tests:
    runs-on: ubuntu-latest
    needs: [check-docs-only]
    if: ${{ needs.check-docs-only.outputs.docs_only != 'true' }}
    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
      with:
        egress-policy: audit
    - name: checkout repository
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      with:
        fetch-depth: 0

    - name: setup golang
      uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
      with:
        go-version-file: go.mod

    - name: build docker image
      env:
        IMG: kong-operator
        TAG: e2e-${{ github.sha }}
      run: make docker.build

    - uses: jdx/mise-action@e3d7b8d67a7958d1207f6ed871e83b1ea780e7b0 # v3.3.1
      with:
        install: false

    - name: run e2e tests
      run: make test.e2e
      env:
        KONG_TEST_KONG_OPERATOR_IMAGE_LOAD: kong-operator:e2e-${{ github.sha }}
        GOTESTSUM_JUNITFILE: "e2e-tests.xml"
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: upload diagnostics
      if: always()
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      with:
        name: diagnostics-e2e
        path: /tmp/ktf-diag*
        if-no-files-found: ignore

    - name: collect test report
      if: ${{ always() }}
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      with:
        name: tests-report-e2e
        path: e2e-tests.xml

  buildpulse-report:
    needs:
      - check-docs-only
      - unit-tests
      - envtest-tests
      - integration-tests
      - conformance-tests
      - e2e-tests
    if: ${{ always() && needs.check-docs-only.outputs.docs_only != 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          egress-policy: audit

      - name: checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: download tests report
        id: download-coverage
        uses: actions/download-artifact@018cc2cf5baa6db3ef3c5f8a56943fffe632ef53 # v6.0.0
        with:
          pattern: tests-report*
          path: report
          merge-multiple: true

      - name: Upload test results to BuildPulse for flaky test detection
        if: ${{ !cancelled() }}
        uses: buildpulse/buildpulse-action@d4d8e00c645a2e3db0419a43664bbcf868080234 # v0.12.0
        with:
          account: 962416
          repository: 477814940
          path: report/*.xml
          key: ${{ secrets.BUILDPULSE_ACCESS_KEY_ID }}
          secret: ${{ secrets.BUILDPULSE_SECRET_ACCESS_KEY }}

  # We need this step to fail the workflow if any of the previous steps failed or were cancelled.
  # It allows to use this particular job as a required check for PRs.
  # Ref: https://github.com/orgs/community/discussions/26822#discussioncomment-3305794
  passed:
    runs-on: ubuntu-latest
    needs:
      - check-docs-only
      - ensure-actions-sha-pin
      - ossf-scorecard
      - lint
      - lint-markdownlint
      - govulncheck
      - verify
      - samples
      - install-with-kustomize
      - build
      - CRDs
      - unit-tests
      - envtest-tests
      - kongintegration-tests
      - conformance-tests
      - integration-tests
      - integration-tests-bluegreen
      - e2e-tests
      - buildpulse-report
    if: always()
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          egress-policy: audit
      - name: Check if docs-only changes
        run: |
          if [[ "${{ needs.check-docs-only.outputs.docs_only }}" == "true" ]]; then
            echo "Only documentation files were changed, skipping tests"
            exit 0
          fi

      - name: Check test results
        if: ${{ needs.check-docs-only.outputs.docs_only != 'true' }}
        run: |
          if [[ "${{ contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled') }}" == "true" ]]; then
            echo "Some jobs failed or were cancelled."
            exit 1
          fi
